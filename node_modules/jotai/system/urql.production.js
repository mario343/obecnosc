System.register(["@urql/core","jotai","wonka"],function(P){"use strict";var g,l,v,d,A;return{setters:[function(p){g=p.createClient},function(p){l=p.atom},function(p){v=p.pipe,d=p.skip,A=p.subscribe}],execute:function(){P({atomWithMutation:M,atomWithQuery:k,atomWithSubscription:T});const p=(()=>{try{return process.env.JOTAI_URQL_DEFAULT_URL}catch{return}})()||"/graphql",q=P("clientAtom",l(g({url:p})));var R=Object.defineProperty,O=Object.getOwnPropertySymbols,W=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable,E=(n,u,e)=>u in n?R(n,u,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[u]=e,w=(n,u)=>{for(var e in u||(u={}))W.call(u,e)&&E(n,e,u[e]);if(O)for(var e of O(u))x.call(u,e)&&E(n,e,u[e]);return n};const j=n=>"data"in n&&!n.error;function k(n,u=e=>e(q)){const e=l(()=>({})),c=(r,s,t,i)=>{let y=null;const b=l(new Promise(h=>{y=h}));r.resultAtom=b;let a=()=>{throw new Error("setting result without mount")};const f=h=>{if(b===r.resultAtom){if(!j(h))throw new Error("result does not have data");y?(y(h),y=null):a(h)}};return s.query(t.query,t.variables,w(w(w({},t.requestPolicy&&{requestPolicy:t.requestPolicy}),t.context),i)).toPromise().then(f).catch(()=>{}),b.onMount=h=>{a=h;const L=v(s.query(t.query,t.variables,w(w(w({},t.requestPolicy&&{requestPolicy:t.requestPolicy}),t.context),i)),d(1),A(f));return()=>L.unsubscribe()},b},o=l(r=>{const s=n(r);if(s.pause)return null;const t=u(r);return{resultAtom:c(r(e),t,s),client:t,args:s}}),m=l(null);return l(r=>{const s=r(o);if(!s)return null;let{resultAtom:t}=s;const i=r(m);return i&&i.oldResultAtom===t&&(t=i.newResultAtom),r(t)},(r,s,t)=>{switch(t.type){case"reexecute":{const i=r(o);if(!i)throw new Error("query is paused");const{resultAtom:y,client:b,args:a}=i;s(m,{oldResultAtom:y,newResultAtom:c(r(e),b,a,t.opts)})}}})}function M(n,u=e=>e(q)){const e=l(new Promise(()=>{}));return l(c=>c(e),(c,o,m)=>{o(e,new Promise(()=>{}));const r=u(c),s=n(c);r.mutation(s,m.variables,m.context).toPromise().then(t=>{var i;o(e,t),(i=m.callback)==null||i.call(m,t)}).catch(()=>{})})}const S=n=>"data"in n;function T(n,u=e=>e(q)){const e=l(c=>{const o=n(c);if(o.pause)return{args:o};const m=u(c);let r=null;const s=l(new Promise(a=>{r=a}));let t=()=>{throw new Error("setting result without mount")};const i=a=>{if(!S(a))throw new Error("result does not have data");r?(r(a),r=null):t(a)},y=v(m.subscription(o.query,o.variables,o.context),A(i));let b=setTimeout(()=>{b=null,y.unsubscribe()},1e3);return s.onMount=a=>{t=a;let f;return b?(clearTimeout(b),f=y):f=v(m.subscription(o.query,o.variables,o.context),A(i)),()=>f.unsubscribe()},{resultAtom:s,args:o}});return l(c=>{const{resultAtom:o}=c(e);return o?c(o):null})}}}});
